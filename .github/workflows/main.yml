name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'Front-End Folder/**'  # Ignora cambios en la carpeta del frontend
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'Front-End Folder/**'  # Ignora cambios en la carpeta del frontend también en pull requests

concurrency:
  group: deploy-master
  cancel-in-progress: true  # Cancela cualquier ejecución anterior si una nueva ejecución es activada en `master`

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # Estrategia de matriz para probar en diferentes versiones de Python
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']  # Define múltiples versiones de Python para ejecutar

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}  # Usa la versión de Python definida en la matriz

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

      # En caso de Pull Request, ejecuta solo las pruebas sin desplegar
      - name: Run Tests
        if: github.event_name == 'pull_request'
        run: |
          # Aquí puedes agregar comandos para correr tus pruebas
          pytest --maxfail=1 --disable-warnings

      # Despliega en Render solo si es un push a la rama master, no en PRs
      - name: Deploy to Render
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST -H "Authorization: Bearer $API_KEY" \
          -d '{"serviceId": "srv-csl908t6l47c73e7m46g"}' \
          https://api.render.com/deploy
